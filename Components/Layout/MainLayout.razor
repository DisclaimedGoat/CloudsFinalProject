@using FinalProject.Components.Layout.States
@using FinalProject.Models
@using FinalProject.Services
@inherits LayoutComponentBase
@inject  ILogger<MainLayout> Logger;
@inject UserService UserService;

<div class="main">
    @switch (_state)
    {
        case States.LoggedOut:
            <LoginPage LoginCallback="@LoginCallback" SignUpCallback="@SignUpCallback"/>
            break;
        case States.LoggedIn:
            <HomePage/>
            break;
        default:
            throw new ArgumentOutOfRangeException();
    }
</div>

@code {

    private enum States
    {
        LoggedOut,
        LoggedIn
    }

    private States _state = States.LoggedOut;

    private User? _loggedInUser;

    private async Task LoginCallback(LoginPage.LoginPayload payload)
    {
        User? loggedIn = await UserService.AuthAsync(payload.Username, payload.Password);
        if (loggedIn is null) return;

        _loggedInUser = loggedIn;
        
        Logger.LogInformation("Logged in.");
    }
    
    private async Task SignUpCallback(LoginPage.SignUpPayload payload)
    {
        User user = new(payload.Email, payload.Username, payload.Password);
        bool success = await UserService.SignupAsync(user);
        if (!success) return;
        
        Logger.LogInformation("Signed up.");
    } 

}